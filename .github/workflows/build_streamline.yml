name: Streamline Windows Build

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]

jobs:
  build-streamline:
    runs-on: windows-latest
    steps:
    - name: Install Chocolatey
      shell: pwsh
      run: |
        Set-ExecutionPolicy Bypass -Scope Process -Force
        [System.Net.ServicePointManager]::SecurityProtocol = [System.Net.ServicePointManager]::SecurityProtocol -bor 3072
        iex ((New-Object System.Net.WebClient).DownloadString('https://community.chocolatey.org/install.ps1'))

    - name: Install Build Tools
      shell: pwsh
      run: |
        choco install visualstudio2022-workload-vctools -y --params="--add Microsoft.VisualStudio.Component.VC.CMake.project --add Microsoft.VisualStudio.Component.Windows11SDK.22621"
        choco install cmake -y --installargs 'ADD_CMAKE_TO_PATH=System'
        choco install ninja -y
        choco install cuda --version=12.3.0 -y --params="/InstallationType=Toolkit /NoNvidiaDriver"

    - name: Checkout Code
      uses: actions/checkout@v4
      with:
        submodules: recursive

    - name: Cache CMake Build
      uses: actions/cache@v3
      with:
        path: build
        key: ${{ runner.os }}-cmake-${{ hashFiles('**/CMakeLists.txt') }}
        restore-keys: |
          ${{ runner.os }}-cmake-

    - name: Configure CMake
      shell: pwsh
      run: |
        cmake -S . -B build -G Ninja `
          -DCMAKE_BUILD_TYPE=Release `
          -DSL_WITH_TESTS=OFF `
          -DSL_FORCE_DISABLE_GPU=ON `
          -DCMAKE_MAKE_PROGRAM=ninja

    - name: Build Project
      shell: pwsh
      run: cmake --build build --config Release --parallel

    - name: Package Binaries
      shell: pwsh
      run: |
        $date = Get-Date -Format "yyyyMMdd-HHmmss"
        Compress-Archive -Path "build\bin\Release\*" -DestinationPath "streamline-bin-$date.zip"

    - name: Upload Artifacts
      uses: actions/upload-artifact@v4
      with:
        name: streamline-binaries
        path: streamline-bin-*.zip
